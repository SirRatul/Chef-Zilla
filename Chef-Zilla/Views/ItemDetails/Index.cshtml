@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = @Model.ProductName;
}
@Html.Partial("~/Views/Shared/_NavBar.cshtml")
@{ 
    var totalRating = 0;
    for (int i = 0; i < Model.ReviewId.Count; i++)
    {
        totalRating = totalRating + Model.Ratings[i];
    }
    var averageRating = Math.Ceiling(Convert.ToDouble(totalRating) / Convert.ToDouble(Model.ReviewId.Count));
}
<br>
<br>
<br>
<br>
<div class="container my-5">
    <div class="row">
        <div class="col-md-6">
            <div class="container-fluid">
                <div class="row">
                    <img style="width: 100%;" src="@Url.Content(Model.ProductImage)" alt="">
                </div>
                @if (TempData["message"] != null)
                {
                    <div id="infoValidationSummary" class="modal" tabindex="-1" role="dialog">
                        <div class="modal-dialog" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title">Modal title</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <p>@TempData["message"]</p>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="row mt-4">
                    <div class="col-md-3 col-sm-3 col-3">
                        <p style="font-size: 22px; color: grey; margin-left: -15px;">Quantity:</p>
                    </div>
                    <div class="col-md-3 col-sm-3 col-3">
                        <input type="number" class="form-control" id="quantity" value="1" min="1">
                    </div>
                    <div class="col-md-7"></div>
                </div>
                <div class="row">
                    <div class="col-md-4">
                        <p style="font-size: 22px; color: grey; margin-left: -15px;">Package Include:</p>
                    </div>
                    <div class="col-md-8">
                        <ul>
                            <li>Ingredients</li>
                            <li>Detailed Recipe</li>
                            <li>Serving Materials</li>
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="col-2">
                        <h5 style=" color: grey; margin-left: -15px;">Price:</h5>
                    </div>
                    <div class="col-10">
                        <h5 id="totalPrice">@Model.ProductPrice BDT</h5>
                        <h5 class="d-none" id="actualPrice">@Model.ProductPrice</h5>
                        <input type="hidden" id="extraIngredientPriceUpdate" value="0">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <h2 class="font-weight-bold">@Model.ProductName</h2>
            <p class="font-weight-bold text-muted my-4"> Ready In: @Model.PrepareTime</p>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th style="width: 70%;">Ingredients</th>
                        <th class="justify-content-center">Quantity</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>
                            <ul style="list-style-type: none;">
                                @for (var i = 0; i < @Model.IngredientName.Count; i++)
                                {
                                    <li>@Model.IngredientName[i]</li>

                                }
                            </ul>
                        </td>
                        <td>
                            <ul style="list-style-type: none;">
                                @for (var i = 0; i < @Model.IngredientQuantity.Count; i++)
                                {
                                    <li>@Model.IngredientQuantity[i]</li>

                                }
                            </ul>
                        </td>
                    </tr>
                </tbody>
            </table>

            <h5>Extra Add:</h5>
            <input type="hidden" id="extraIngredientNumber" value="@Model.ExtraIngredientName.Count">

            @for (var i = 0; i < @Model.ExtraIngredientName.Count; i++)
            {
                <div class="row mt-3">
                    <div class="col-6">
                        <div class="form-check">
                            <input class="form-check-input-lg" type="checkbox" value="" id="extraIngredient@(i+1)">
                            <label style="font-size: 20px; margin-left: 5px; color: grey" class="form-check-label" for="defaultCheck1">
                                @Model.ExtraIngredientName[i]
                            </label>
                        </div>
                    </div>
                    <div class="col-3">
                        <input type="number" class="form-control" id="extraIngredientQuantity@(i+1)" value="1" min="1" onfocus="this.oldvalue = this.value;" onchange="onChangeTest(this, @(i+1), @Model.ExtraIngredientId[i]);this.oldvalue = this.value;this.Identification=@(i+1);">
                    </div>
                    <div class="col-3">
                        <h4>+@Model.ExtraIngredientPrice[i] BDT</h4>
                        <input type="hidden" id="extraIngredientPrice@(i+1)" value="@Model.ExtraIngredientPrice[i]">
                    </div>
                </div>

            }
        </div>
    </div>
</div>
<div class="container">
    <div class="row text-center">
        <div class="col-md-8 mt-5">
            @* code for add to cart*@
            @using (Html.BeginForm("AddBox", "ItemDetails", FormMethod.Post))
            {
                <div class="row">

                    <div class="col-md-6 mt-5">


                        <input type="submit" name="command" value="Add To Cart" class="buttonCss" />

                        <br />
                        @*Link to go to cart view*@
                        <a href="@Url.Action("ViewCart", "Cart")" class="btn btn-warning text-black ">View Cart</a>

                        @*<button class="buttonCss">Add To Cart</button>*@
                    </div>
                    <div class="col-md-6 mt-5">

                        @Html.AntiForgeryToken()
                        @if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                        {
                            <div class="row">
                                <div class="col-12 mb-2">
                                    <div class="alert alert-warning alert-dismissible show" role="alert">
                                        @Html.ValidationSummary(true, "")
                                        <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                            <span aria-hidden="true">&times;</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                        <input type="text" class="d-none" name="productId" value="@Model.ProductID" readonly="readonly" />
                        <input type="text" class="d-none" name="productName" value="@Model.ProductName" readonly="readonly" />
                        <input type="text" class="d-none" name="productQuantity" value="1" readonly="readonly" />
                        <input type="text" class="d-none" name="productPrice" value="@Model.ProductPrice" readonly="readonly" />
                        @for (var i = 0; i < @Model.ExtraIngredientName.Count; i++)
                        {
                            <input type="text" class="d-none" name="extraIngredientId" value="@Model.ExtraIngredientId[i]" readonly="readonly" />
                            @Html.CheckBox("extraIngredientNumber", new { @value = @Model.ExtraIngredientId[i] + " 1", @class = "d-none" })
                        }
                        <input type="submit" name="command" value="Add To Box" class="buttonCss" />
                    </div>
                </div>
             }

             

        </div>
                <div class="col-md-4 mt-5">
                    

                    @using (Html.BeginForm("Create", "WishList", FormMethod.Post))
                    {
                        <input type="text" class="d-none" name="productId" value="@Model.ProductID" readonly="readonly" />

                        <input type="text" class="d-none" name="UserId" id="userId" value="@User.Identity.GetUserId()" readonly="readonly" />

                        <button type="submit" class="buttonCss">Add to Wish List</button>

                    }

                    <br />
                    <br />

                    <a href="@Url.Action("Details", "WishList")" class="btn btn-warning text-black ">View Wish List</a>

                    
                </div>

            </div>
    </div>
<div class="container-fluid">

   

    <div class="row col-md-12 justify-content-center">
        <a href="@Url.Action("ViewOrderList", "Order")" class="btn btn-warning text-black ">View Order List</a>
    </div>



    <div class="row mt-5 text-center">
        <div class="col-12">
            <h5 class="font-weight-bold">Rating and Reviews of @Model.ProductName</h5>
        </div>
    </div>

    <div class="row mt-5 text-center">
        <div class="col-12">
            <h1 class="font-weight-bold ">@averageRating/5</h1>
        </div>
    </div>

    <div class="row mt-5 text-center">
        <div class="col-6 offset-3" style="color:#FFDF00; font-size:35px;">
            @for (var i = 0; i < averageRating; i++)
            {
                <i class=" fas fa-star" aria-hidden="true"></i>
            }
            @for (var i = 0; i < 5 - averageRating; i++)
            {
                <i class=" far fa-star" aria-hidden="true"></i>
            }
           
        </div>
    </div>

    <div class="row mt-5 mx-5">
        <div class="col-12 text-center">
            <h3 class="font-weight-bold">Product Reviews</h3>
        </div>
    </div>

    

    <br />
    <br />
    <br />


    <div class="row col-md-12">

        @*comment Form*@

        @using (Html.BeginForm("Index", "Review", FormMethod.Post))
        {
            <div class="row col-md-12">

                <h5 class="font-weight-bold ml-3 mt-2">Your Rating:</h5>
                <span style="color:#FFDF00; margin-left:20px; margin-bottom:5px; font-size:25px;">
                    <i class="ratingStar far fa-star" data-value="1" aria-hidden="true"></i>
                    <i class="ratingStar far fa-star" data-value="2" aria-hidden="true"></i>
                    <i class="ratingStar far fa-star" data-value="3" aria-hidden="true"></i>
                    <i class="ratingStar far fa-star" data-value="4" aria-hidden="true"></i>
                    <i class="ratingStar far fa-star" data-value="5" aria-hidden="true"></i>
                </span>

                <input class="d-none" name="Ratings" id="ratingsValue" />
                <br />
                <input class="ml-5 d-none" name="productId" id="productId" value="@Model.ProductID" />

                



                <div class="col-md-12">
                    <h5 class="font-weight-bold">Product Reviews:</h5>
                </div>

                <div class="col-md-12">
                    <div class="form-group">
                        <textarea class="form-control" name="reviewText" id="exampleFormControlTextarea1" rows="3"></textarea>
                    </div>
                </div>

                <div class="row col-md-12 text-center justify-content-center">
                    <a href="@Url.Action("Index", "Review")">
                        <input type="submit" value="Submit" class="buttonCss" />

                    </a>
                </div>

            </div>


        }

    </div>




    

    </div>
</div>



<div class="container-fluid">

    @for (var i = 0; i < Model.ReviewId.Count; i++)
    {
        

        <div class="row ml-5">
            <div class="col-md-12">
                
                <div class="float-left" style="color:#FFDF00; font-size:20px;">
                    @for (var j = 0; j < Model.Ratings[i]; j++)
                    {
                        <i class=" fas fa-star" aria-hidden="true"></i>
                    }
                    @for (var k = 0; k < 5 - Model.Ratings[i]; k++)
                    {
                        <i class=" far fa-star" aria-hidden="true"></i>
                    }
                </div>
                


            </div>
            <div class="col-md-12 mt-3">
                <h5>By @Model.ReviewerUserName[i]</h5>
                <p style="color: grey">@Model.ReviewDateTime[i]</p>
                <p>@Model.ReviewText[i]</p>
            </div>
        </div>
        if (i != Model.ReviewId.Count - 1)
        {
            <hr>
        }
    }
</div>
<br>
<br>
<br>
<br>
<br>
@*<div class="col-12">
        <div class="col-4">
            <div class="text-center my-5">
                <button class="buttonCss">Add To Cart</button>
            </div>
        </div>
        <div class="col-4">
            @using (Html.BeginForm("AddBox", "ItemDetails", FormMethod.Post))
            {
                @Html.AntiForgeryToken()
                if (ViewData.ModelState.Keys.Any(k => ViewData.ModelState[k].Errors.Any()))
                {
                    <div class="row">
                        <div class="col-12 mb-2">
                            <div class="alert alert-warning alert-dismissible show" role="alert">
                                @Html.ValidationSummary(true, "")
                                <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                                    <span aria-hidden="true">&times;</span>
                                </button>
                            </div>
                        </div>
                    </div>
                }
                <input type="text" class="d-none" name="productId" value="@Model.ProductID" readonly="readonly" />
                <input type="text" class="d-none" name="productName" value="@Model.ProductName" readonly="readonly" />
                <input type="text" class="d-none" name="productQuantity" value="1" readonly="readonly" />
                <input type="text" class="d-none" name="productPrice" value="@Model.ProductPrice" readonly="readonly" />
                for (var i = 0; i < @Model.ExtraIngredientName.Count; i++)
                {
                    <input type="text" class="d-none" name="extraIngredientId" value="@Model.ExtraIngredientId[i]" readonly="readonly" />
                    @Html.CheckBox("extraIngredientNumber", new { @value = @Model.ExtraIngredientId[i] + " 1", @class = "d-none" })
                }
                <div class="text-center my-5">
                    <button type="submit" class="buttonCss">Add To Box</button>
                </div>
            }
        </div>
    </div>*@
@Html.Partial("~/Views/Shared/_Footer.cshtml")
@section Scripts {
    <script>
        $(".ratingStar").hover(function () {

            $(".ratingStar").addClass("far").removeClass("fas");
            $(this).addClass("fas").removeClass("far");
            $(this).prevAll(".ratingStar").addClass("fas").removeClass("far");
        });

        $(".ratingStar").click(function () {
            //debugger;
            var starValue = $(this).attr("data-value"); 

            $("#ratingsValue").val(starValue);
        });

        $(document).ready(function() {
            var extraIngredientNumber = document.getElementById("extraIngredientNumber").value;
            for (let i = 0; i < extraIngredientNumber; i++) {
                document.getElementById('extraIngredient' + (i + 1)).addEventListener('change',
                    (event) => {
                        if (event.target.checked) {
                            @*alert('1st for checked');*@
                            document.getElementById("extraIngredientPriceUpdate").value = parseInt(document.getElementById("extraIngredientPriceUpdate").value) + (parseInt(document.getElementById("extraIngredientQuantity" + (i + 1)).value) * parseInt(document.getElementById("extraIngredientPrice" + (i + 1)).value));
                            document.getElementById("totalPrice").innerHTML = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value))) + " BDT";
                            document.getElementsByName("productPrice")[0].value = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value)));
                            var extraIngredientId = document.getElementsByName("extraIngredientId")
                            [i].value;
                            var quantityNumber = document.getElementById("extraIngredientQuantity" + (i + 1)).value;
                            if (i === 0) {
                                document.getElementsByName("extraIngredientNumber")[i].checked = "event.target.checked";
                                document.getElementsByName("extraIngredientNumber")[i].value = extraIngredientId + " " + quantityNumber;
                            } else if (i === 1) {
                                document.getElementsByName("extraIngredientNumber")[i + 1].checked = event.target.checked;
                                document.getElementsByName("extraIngredientNumber")[i + 1].value = extraIngredientId + " " + quantityNumber;
                            } else {
                                document.getElementsByName("extraIngredientNumber")[i * 2].checked = event.target.checked;
                                document.getElementsByName("extraIngredientNumber")[i * 2].value = extraIngredientId + " " + quantityNumber;
                            }
                            @*console.log("Extra Ingredient Quantity of Item " + (i + 1) + " = " + document.getElementById("extraIngredientQuantity" + (i + 1)).value);*@
                            @*console.log("Extra Ingredient Price Of Item " + (i + 1) + "= " + document.getElementById("extraIngredientPrice" + (i + 1)).value);*@
                        } else {
                            @*alert('1st for not checked');*@
                            @*console.log('I:' + (i+1));*@
                            document.getElementById("extraIngredientPriceUpdate").value = parseInt(document.getElementById("extraIngredientPriceUpdate").value) - (parseInt(document.getElementById("extraIngredientQuantity" + (i + 1)).value) * parseInt(document.getElementById("extraIngredientPrice" + (i + 1)).value));
                            document.getElementById("totalPrice").innerHTML = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value))) + " BDT";
                            document.getElementsByName("productPrice")[0].value = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value)));
                            if (i === 0) {
                                document.getElementsByName("extraIngredientNumber")[i].checked = false;
                            } else if (i === 1) {
                                document.getElementsByName("extraIngredientNumber")[i + 1].checked = false;
                            } else {
                                document.getElementsByName("extraIngredientNumber")[i * 2].checked = false;
                            }
                            @*console.log("Uncheck Extra Ingredient Quantity of Item " + (i + 1) + " = " + document.getElementById("extraIngredientQuantity" + (i + 1)).value);*@
                            @*console.log("Uncheck Extra Ingredient Price Of Item " + (i + 1) + "= " + document.getElementById("extraIngredientPrice" + (i + 1)).value);*@
                        }
                    });
            }
            document.getElementById("quantity").addEventListener('input',
                function(e) {
                    @*console.log('Actual Value Without Extra Price:' + (parseInt(e.target.value) * parseInt(document.getElementById("actualPrice").innerHTML)));*@
                    @*console.log('Extra Price:' + parseInt(document.getElementById("extraIngredientPriceUpdate").value));*@
                    document.getElementById("totalPrice").innerHTML = ((parseInt(e.target.value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value))) + " BDT";
                    document.getElementsByName("productPrice")[0].value = ((parseInt(e.target.value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value)));
                    document.getElementsByName("productQuantity")[0].value = e.target.value;
                });
        });

        function onChangeTest(textbox, Identification, Id) {
            @*alert("Value is " + textbox.value + "\n" + "Old Value is " + textbox.oldvalue + "\n" + "Identification is " + Identification + "\n" + "Id is " + Id);*@
            if (document.getElementById('extraIngredient' + (Identification)).checked) {
                @*alert("2nd for checked");*@
                document.getElementById("extraIngredientPriceUpdate").value = parseInt(document.getElementById("extraIngredientPriceUpdate").value) + (parseInt(textbox.value) * parseInt(document.getElementById("extraIngredientPrice" + (Identification)).value)) - (parseInt(textbox.oldvalue) * parseInt(document.getElementById("extraIngredientPrice" + (Identification)).value));
                document.getElementById("totalPrice").innerHTML = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value))) + " BDT";
                document.getElementsByName("productPrice")[0].value = ((parseInt(document.getElementById("quantity").value) * parseInt(document.getElementById("actualPrice").innerHTML)) + (parseInt(document.getElementById("extraIngredientPriceUpdate").value)));
                document.getElementById("extraIngredientQuantity" + (Identification)).value = textbox.value;

                if ((Identification - 1) === 0) {
                    document.getElementsByName("extraIngredientNumber")[(Identification - 1)].value = Id + " " + textbox.value;
                } else if ((Identification - 1) === 1) {
                    document.getElementsByName("extraIngredientNumber")[(Identification - 1) + 1].value = Id + " " + textbox.value;
                } else {
                    document.getElementsByName("extraIngredientNumber")[(Identification - 1) * 2].value = Id + " " + textbox.value;
                }
            } else {
                @*alert("2nd for not checked");*@
                document.getElementById("extraIngredientQuantity" + (Identification)).value = textbox.value;
            }
        }

        if ("@TempData["message"]" != null) {
            $('#infoValidationSummary').modal('show');
        }
    </script>
}
